.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_plot_1_getting_started.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_1_getting_started.py:


Get started with some basics
============================

Reading videos into NumPy arrays was never more simple. In addition,
this library also provides an entire range of additional functionalities
for reading the videos.


How to simply read a video, given its path?
-------------------------------------------



.. code-block:: python


    # Import
    from mydia import Videos

    # Initialize video path
    video_path = r"./sample_video/bigbuckbunny.mp4"

    # Create a reader object
    reader = Videos()

    # Call the 'read()' function to get the video tensor
    video = reader.read(video_path)

    # a tensor of shape (1, 132, 720, 1080, 3)
    print("The shape of the tensor:", video.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    The shape of the tensor: (1, 132, 720, 1280, 3)


The tensor represents **1 video** having **132 frames**, with each frame
having a width and height of 1080 and 720 pixels respectively. “**3**”
denotes the Red, Green and Blue (RGB) channels of the video.


Or, read multiple videos
------------------------

.. code:: python

 from mydia import Videos
 video_paths = ["", "", ...] # list of path of videos
 reader = Videos()
 video = reader.read(video_paths)

*For detailed information of the output tensor, view the code documentation.*


Saving the loaded video tensor
------------------------------

.. important:: Once the videos have been processed, they could be saved
 as :obj:`numpy.ndarray` (in .npz or .npy format). For further details, view
 the documentation of:

 - :obj:`numpy.save`: for saving in .npy format

 - :obj:`numpy.savez`: for saving in .npz format

 - :obj:`numpy.load`: for loading back the saved numpy tensors

 Since the whole reading process is time consuming, this could turn out to be
 a useful way to store and reload the video tensors.


**Total running time of the script:** ( 0 minutes  8.362 seconds)


.. _sphx_glr_download_auto_examples_plot_1_getting_started.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_1_getting_started.py <plot_1_getting_started.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_1_getting_started.ipynb <plot_1_getting_started.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
